{"version":3,"sources":["components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","todos","onUserSelect","selectedUser","titleSearch","titleSearchChangeHandler","setTodosStatus","className","id","type","name","value","onChange","target","event","map","todo","completed","key","readOnly","title","userId","onClick","BASE_URL","request","url","options","fetch","then","response","json","CurrentUser","state","user","this","props","data","setState","prevProps","email","phone","onClearUser","React","Component","App","selectedUserId","todosStatus","selectUser","clearUser","status","prepareTodos","visibleTodos","filter","trim","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"0VAIaA,G,kBAAW,SAAC,GAAD,IACtBC,EADsB,EACtBA,MACAC,EAFsB,EAEtBA,aACAC,EAHsB,EAGtBA,aACAC,EAJsB,EAItBA,YACAC,EALsB,EAKtBA,yBACAC,EANsB,EAMtBA,eANsB,OAQtB,yBAAKC,UAAU,YACb,sCACA,oDAEI,2BACEA,UAAU,yBACVC,GAAG,eACHC,KAAK,OACLC,KAAK,cACLC,MAAOP,EACPQ,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBR,EAAyBQ,OAIvD,kDAEE,4BACEH,KAAK,cACLF,GAAG,cACHD,UAAU,0BACVK,SAAU,SAAAE,GAAK,OAAIR,EAAeQ,EAAMD,OAAOF,SAE/C,4BACEA,MAAM,OADR,OAKA,4BACEA,MAAM,UADR,UAKA,4BACEA,MAAM,aADR,eAON,yBAAKJ,UAAU,4BACb,wBAAIA,UAAU,kBACXN,EAAMc,KAAI,SAAAC,GAAI,OACb,wBACET,UACES,EAAKC,UACD,yCACA,2CAENC,IAAKF,EAAKR,IAEZ,+BACE,2BAAOC,KAAK,WAAWU,UAAQ,IAC/B,2BAAIH,EAAKI,QAGX,4BACIb,UACES,EAAKK,SAAWlB,EAAhB,2JAMI,+BAENM,KAAK,SACLa,QAAS,WACPpB,EAAac,EAAKK,UAZxB,YAecL,EAAKK,iB,OClFvBE,G,MAAW,kCAEV,SAASC,EAAQC,EAAKC,GAC3B,OAAOC,MACJD,EAAD,UAAoCH,GAApC,OAA+CE,GAA/C,OAAqDC,GAArD,UAAcH,GAAd,OAAyBE,IAExBG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UCDxB,IAAMC,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAFV,uDAKE,WAAqB,IAAD,OAClBT,EAAQ,SAAD,WAAeU,KAAKC,MAAMd,SAC9BO,MAAK,gBAAGQ,EAAH,EAAGA,KAAH,OAAc,EAAKC,SAAS,CAAEJ,KAAK,eAAMG,UAPrD,gCAUE,SAAmBE,GAAY,IAAD,OACxBJ,KAAKC,MAAMd,SAAWiB,EAAUjB,QAClCG,EAAQ,SAAD,WAAeU,KAAKC,MAAMd,SAC9BO,MAAK,gBAAGQ,EAAH,EAAGA,KAAH,OAAc,EAAKC,SAAS,CAAEJ,KAAK,eAAMG,UAbvD,oBAiBE,WACE,MAAmCF,KAAKF,MAAMC,KAAtCzB,EAAR,EAAQA,GAAIE,EAAZ,EAAYA,KAAM6B,EAAlB,EAAkBA,MAAOC,EAAzB,EAAyBA,MACjBC,EAAgBP,KAAKC,MAArBM,YAER,OACE,yBAAKlC,UAAU,eACb,wBAAIA,UAAU,sBACZ,uDACqBC,KAIvB,wBAAID,UAAU,qBAAqBG,GACnC,uBAAGH,UAAU,sBAAsBgC,GACnC,uBAAGhC,UAAU,sBAAsBiC,GACnC,4BACEjC,UAAU,qBACVE,KAAK,SACLa,QAASmB,GAHX,cAhCR,GAAiCC,IAAMC,WCyFxBC,E,4MAtFbZ,MAAQ,CACN/B,MAAO,GACP4C,eAAgB,EAChBzC,YAAa,GACb0C,YAAa,O,EAUfC,WAAa,SAAC1B,GACR,EAAKW,MAAMa,iBAAmBxB,GAChC,EAAKgB,SAAS,CAAEQ,eAAgBxB,K,EAIpC2B,UAAY,WACV,EAAKX,SAAS,CAAEQ,eAAgB,K,EAGlCxC,yBAA2B,YAAsB,IAAnBK,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAClC,EAAK0B,SAAL,eAAiB3B,EAAOC,K,EAG1BL,eAAiB,SAAC2C,GAChB,EAAKZ,SAAS,CAAES,YAAaG,K,EAG/BC,aAAe,WACb,MAA4C,EAAKlB,MAAzC/B,EAAR,EAAQA,MAAOG,EAAf,EAAeA,YAAa0C,EAA5B,EAA4BA,YAExBK,EAAY,YAAOlD,GAgBvB,MAdoB,WAAhB6C,IACFK,EAAe,YAAIlD,GAAOmD,QAAO,qBAAGnC,cAGlB,cAAhB6B,IACFK,EAAe,YAAIlD,GAAOmD,QAAO,qBAAGnC,cAGlCb,EAAYiD,SACdF,EAAe,YAAIA,GAAcC,QAAO,SAAApC,GAAI,MAC1C,UAAIA,EAAKI,OAASkC,cAAcC,SAASnD,EAAYkD,mBAIlDH,G,uDA5CT,WAAqB,IAAD,OAClB3B,EAAQ,UACLI,MAAK,gBAAGQ,EAAH,EAAGA,KAAH,OACJ,EAAKC,SAAS,CAAEpC,MAAM,YAAKmC,U,oBA4CjC,WACE,MAAwCF,KAAKF,MAArC5B,EAAR,EAAQA,YAAayC,EAArB,EAAqBA,eACfM,EAAejB,KAAKgB,eAE1B,OACE,yBAAK3C,UAAU,OACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACEN,MAAOkD,EACPjD,aAAcgC,KAAKa,WACnB5C,aAAc0C,EACdzC,YAAaA,EACbC,yBAA0B6B,KAAK7B,yBAC/BC,eAAgB4B,KAAK5B,kBAIzB,yBAAKC,UAAU,gBACb,yBAAKA,UAAU,0BACZsC,EACC,kBAAC,EAAD,CACExB,OAAQwB,EACRJ,YAAaP,KAAKc,YAElB,0B,GA/EEN,IAAMC,WCHxBa,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.2dbce119.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\n\nexport const TodoList = ({\n  todos,\n  onUserSelect,\n  selectedUser,\n  titleSearch,\n  titleSearchChangeHandler,\n  setTodosStatus,\n}) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n    <div>\n        Search by title name\n        <input\n          className=\"TodoList__title-search\"\n          id=\"title-filter\"\n          type=\"text\"\n          name=\"titleSearch\"\n          value={titleSearch}\n          onChange={({ target }) => titleSearchChangeHandler(target)}\n        />\n      </div>\n\n      <div>\n        Select todo status\n        <select\n          name=\"todo-status\"\n          id=\"todo-status\"\n          className=\"TodoList__status-select\"\n          onChange={event => setTodosStatus(event.target.value)}\n        >\n          <option\n            value=\"All\"\n          >\n            All\n          </option>\n          <option\n            value=\"Active\"\n          >\n            Active\n          </option>\n          <option\n            value=\"Completed\"\n          >\n            Completed\n          </option>\n        </select>\n      </div>\n    <div className=\"TodoList__list-container\">\n      <ul className=\"TodoList__list\">\n        {todos.map(todo => (\n          <li\n            className={\n              todo.completed\n                ? 'TodoList__item TodoList__item--checked'\n                : 'TodoList__item TodoList__item--unchecked'\n            }\n            key={todo.id}\n          >\n          <label>\n            <input type=\"checkbox\" readOnly />\n            <p>{todo.title}</p>\n          </label>\n\n          <button\n              className={\n                todo.userId === selectedUser\n                  ? `\n                      TodoList__user-button\n                      TodoList__user-button--selected\n                      button\n                    `\n                  : 'TodoList__user-button button'\n              }\n              type=\"button\"\n              onClick={() => {\n                onUserSelect(todo.userId);\n              }}\n          >\n            User&nbsp;#{todo.userId}\n          </button>\n        </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    userId: PropTypes.number,\n  })).isRequired,\n  selectedUser: PropTypes.number.isRequired,\n  onSelectUser: PropTypes.func.isRequired,\n  titleSearch: PropTypes.string.isRequired,\n  titleSearchChangeHandler: PropTypes.func.isRequired,\n  setTodosStatus: PropTypes.func.isRequired,\n};","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport function request(url, options) {\n  return fetch(\n    !options ? `${BASE_URL}${url}` : `${BASE_URL}${url}${options}`,\n  )\n    .then(response => response.json());\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\nimport { request } from '../../api/api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: {},\n  }\n\n  componentDidMount() {\n    request('/users', `/${this.props.userId}`)\n      .then(({ data }) => this.setState({ user: { ...data } }));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.userId !== prevProps.userId) {\n      request('/users', `/${this.props.userId}`)\n        .then(({ data }) => this.setState({ user: { ...data } }));\n    }\n  }\n\n  render() {\n    const { id, name, email, phone } = this.state.user;\n    const { onClearUser } = this.props;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            {`Selected user: ${id}`}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{name}</h3>\n        <p className=\"CurrentUser__email\">{email}</p>\n        <p className=\"CurrentUser__phone\">{phone}</p>\n        <button\n          className=\"CurrentUser__clear\"\n          type=\"button\"\n          onClick={onClearUser}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUser: PropTypes.func.isRequired,\n};","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { request } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    titleSearch: '',\n    todosStatus: 'All',\n  };\n\n  componentDidMount() {\n    request('/todos')\n      .then(({ data }) => \n        this.setState({ todos: [...data] })\n      );\n  }\n\n  selectUser = (userId) => {\n    if (this.state.selectedUserId !== userId) {\n      this.setState({ selectedUserId: userId });\n    }\n  }\n\n  clearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  titleSearchChangeHandler = ({ name, value }) => {\n    this.setState({ [name]: value });\n  }\n\n  setTodosStatus = (status) => {\n    this.setState({ todosStatus: status });\n  }\n\n  prepareTodos = () => {\n    const { todos, titleSearch, todosStatus } = this.state;\n\n    let visibleTodos = [...todos];\n\n    if (todosStatus === 'Active') {\n      visibleTodos = [...todos].filter(({ completed }) => !completed);\n    }\n\n    if (todosStatus === 'Completed') {\n      visibleTodos = [...todos].filter(({ completed }) => completed);\n    }\n\n    if (titleSearch.trim()) {\n      visibleTodos = [...visibleTodos].filter(todo => (\n        (`${todo.title}`).toLowerCase().includes(titleSearch.toLowerCase())\n      ));\n    }\n\n    return visibleTodos;\n  }\n\n  render() {\n    const { titleSearch, selectedUserId } = this.state;\n    const visibleTodos = this.prepareTodos();\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={visibleTodos}\n            onUserSelect={this.selectUser}\n            selectedUser={selectedUserId}\n            titleSearch={titleSearch}\n            titleSearchChangeHandler={this.titleSearchChangeHandler}\n            setTodosStatus={this.setTodosStatus}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                onClearUser={this.clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}